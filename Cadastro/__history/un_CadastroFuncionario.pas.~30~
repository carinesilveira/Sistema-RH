unit un_CadastroFuncionario;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.ComCtrls,
  Vcl.StdCtrls, Vcl.DBCtrls, Vcl.Mask, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.MSSQL,
  FireDAC.Phys.MSSQLDef, FireDAC.VCLUI.Wait, Data.DB, FireDAC.Comp.Client,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet;

type
  TFrmCadastroFuncionario = class(TForm)
    pnlFundo: TPanel;
    pnlCadastro: TPanel;
    lblNome: TLabel;
    lblEndereco: TLabel;
    edtEndereco: TDBEdit;
    edtNome: TDBEdit;
    pnlAdmissao: TPanel;
    lblAdmissao: TLabel;
    admissao: TDateTimePicker;
    lblCargo: TLabel;
    cbCargo: TDBComboBox;
    lblSalario: TLabel;
    edtSalario: TDBEdit;
    btnCancelar: TButton;
    btnSalvar: TButton;
    Conexao: TFDConnection;
    q_Cadastro: TFDQuery;
    ds_Cadastro: TDataSource;
    q_CadastroID_FUNC: TFDAutoIncField;
    q_CadastroNOME: TStringField;
    q_CadastroENDERECO: TStringField;
    q_CadastroADMISSAO: TSQLTimeStampField;
    q_CadastroSALARIO: TBCDField;
    q_CadastroCARGO: TStringField;
    procedure btnSalvarClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmCadastroFuncionario: TFrmCadastroFuncionario;

implementation

{$R *.dfm}

procedure TFrmCadastroFuncionario.btnCancelarClick(Sender: TObject);
begin
  if Application.MessageBox('Deseja realmente sair?',
  'Atenção!', MB_ICONWARNING + MB_YESNO) = mrNo then
   Exit;

  ds_Cadastro.DataSet.Cancel;
  Close;
end;

procedure TFrmCadastroFuncionario.btnSalvarClick(Sender: TObject);
var
  acao : string;
begin
  if (Trim(edtNome.Text) = '') then
  begin
    Application.MessageBox('O campo NOME é obrigatório!',
     'Atenção!', MB_ICONEXCLAMATION);
    edtNome.SetFocus;
    Exit;
  end;

  if (Trim(edtSalario.Text) = '') then
  begin
    Application.MessageBox('O campo SALÁRIO é obrigatório!',
     'Atenção!', MB_ICONEXCLAMATION);
    edtSalario.SetFocus;
    Exit;
  end;

  if (Trim(edtSalario.Text) = '0,00') then
  begin
    Application.MessageBox('O campo SALÁRIO deve ser maior que 0!',
     'Atenção!', MB_ICONEXCLAMATION);
    edtSalario.SetFocus;
    Exit;
  end;

  if (cbCargo.ItemIndex = -1) then
  begin
    Application.MessageBox('O campo CARGO é obrigatório!',
    'Atenção!', MB_ICONEXCLAMATION);
    cbCargo.SetFocus;
    Exit;
  end;

  if (ds_Cadastro.DataSet.State = dsEdit) then
    acao := 'alteração'
  else if (ds_Cadastro.DataSet.State = dsInsert) then
    acao := 'inserção';

  if not (ds_Cadastro.DataSet.State in [dsEdit, dsInsert]) then
    Exit
  else if Application.MessageBox(pchar('Cofirma a '+ acao +' dos dados?'),
   'Atenção', MB_ICONWARNING + MB_YESNO) = mrNo then
    Exit;

  ds_Cadastro.DataSet.FieldByName('ADMISSAO').AsDateTime := ADMISSAO.Date;

  try
    ds_Cadastro.DataSet.Post;
    Application.MessageBox('Registro salvo com sucesso!',
   'Sucesso!', MB_ICONINFORMATION);
  Except
    on E: Exception do
      ShowMessage('Erro: '+E.Message)
  end;

  Close;
 ds_Cadastro.DataSet.Open();
end;

procedure TFrmCadastroFuncionario.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
if ds_Cadastro.DataSet.State in [dsInsert, dsEdit] then
  ds_Cadastro.DataSet.Cancel;
end;

procedure TFrmCadastroFuncionario.FormShow(Sender: TObject);
begin
  q_Cadastro.Open();
  //q_cadastro.Insert;
end;

end.
