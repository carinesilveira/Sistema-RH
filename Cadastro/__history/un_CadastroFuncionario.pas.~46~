unit un_CadastroFuncionario;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.ComCtrls,
  Vcl.StdCtrls, Vcl.DBCtrls, Vcl.Mask, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.MSSQL,
  FireDAC.Phys.MSSQLDef, FireDAC.VCLUI.Wait, Data.DB, FireDAC.Comp.Client,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet;

type
  TFrmCadastroFuncionario = class(TForm)
    pnlFundo: TPanel;
    pnlCadastro: TPanel;
    lblNome: TLabel;
    lblEndereco: TLabel;
    edtEndereco: TDBEdit;
    edtNome: TDBEdit;
    pnlAdmissao: TPanel;
    lblAdmissao: TLabel;
    admissao: TDateTimePicker;
    lblCargo: TLabel;
    lblSalario: TLabel;
    edtSalario: TDBEdit;
    btnCancelar: TButton;
    btnSalvar: TButton;
    Conexao: TFDConnection;
    Q_CADASTRO: TFDQuery;
    DS_CADASTRO: TDataSource;
    Q_CARGO: TFDQuery;
    DS_CARGO: TDataSource;
    cbCargo: TDBLookupComboBox;
    Q_CARGOID_CARGO: TFDAutoIncField;
    Q_CARGOCAR_NOME: TStringField;
    Q_CADASTRONOME: TStringField;
    Q_CADASTROENDERECO: TStringField;
    Q_CADASTROADMISSAO: TSQLTimeStampField;
    Q_CADASTROSALARIO: TBCDField;
    Q_CADASTROCARGO: TIntegerField;
    procedure btnSalvarClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
    procedure ValidaCampos;
  public
    { Public declarations }
  end;

var
  FrmCadastroFuncionario: TFrmCadastroFuncionario;

implementation

{$R *.dfm}

procedure TFrmCadastroFuncionario.btnCancelarClick(Sender: TObject);
begin
  if Application.MessageBox('Deseja realmente sair?', 'Atenção!', MB_ICONWARNING + MB_YESNO) = mrNo then
    Exit;

  ds_Cadastro.DataSet.Cancel;
  Close;
end;

procedure TFrmCadastroFuncionario.btnSalvarClick(Sender: TObject);
begin
  ValidaCampos;

  ds_Cadastro.DataSet.FieldByName('ADMISSAO').AsDateTime := ADMISSAO.Date;
  ds_Cadastro.DataSet.FieldByName('CARGO').AsInteger := cbCargo.KeyValue;

  try
    ds_Cadastro.DataSet.Post;
    Application.MessageBox('Registro salvo com sucesso!', 'Sucesso!', MB_ICONINFORMATION);
  Except
    on E: Exception do
      ShowMessage('Erro: ' + E.Message);
  end;

  Close;
  ds_Cadastro.DataSet.Open();
end;


procedure TFrmCadastroFuncionario.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  if ds_Cadastro.DataSet.State in [dsInsert, dsEdit] then
    ds_Cadastro.DataSet.Cancel;
end;

procedure TFrmCadastroFuncionario.FormShow(Sender: TObject);
begin
  Q_CADASTRO.Open;
  Q_CARGO.Open;
  admissao.Date := now;
end;

procedure TFrmCadastroFuncionario.ValidaCampos;
var
  acao: string;
begin
  if Trim(edtNome.Text) = '' then
  begin
    Application.MessageBox('O campo NOME é obrigatório!', 'Atenção!', MB_ICONEXCLAMATION);
    edtNome.SetFocus;
    Abort;
  end;

  if Trim(edtSalario.Text) = '' then
  begin
    Application.MessageBox('O campo SALÁRIO é obrigatório!', 'Atenção!', MB_ICONEXCLAMATION);
    edtSalario.SetFocus;
    Abort;
  end;

  if StrToFloatDef(edtSalario.Text, 0) <= 0 then
  begin
    Application.MessageBox('O campo SALÁRIO deve ser maior que 0!', 'Atenção!', MB_ICONEXCLAMATION);
    edtSalario.SetFocus;
    Abort;
  end;

  if ds_Cadastro.DataSet.State = dsEdit then
    acao := 'alteração'
  else if ds_Cadastro.DataSet.State = dsInsert then
    acao := 'inserção';

  if Application.MessageBox(PChar('Confirma a ' + acao + ' dos dados?'), 'Atenção!', MB_ICONWARNING + MB_YESNO) = mrNo then
    Abort;
end;

end.

