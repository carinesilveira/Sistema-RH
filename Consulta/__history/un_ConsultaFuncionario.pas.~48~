unit un_ConsultaFuncionario;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Data.DB,
  Vcl.Grids, Vcl.DBGrids, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  un_CadastroFuncionario,
  FireDAC.Comp.Client;

type
  TFrmConsultaFuncionario = class(TForm)
    pnlFundo: TPanel;
    pnlCadastro: TPanel;
    pnlBotoes: TPanel;
    btnNovo: TButton;
    btnEditar: TButton;
    btnExcluir: TButton;
    gridItens: TDBGrid;
    Panel1: TPanel;
    Label1: TLabel;
    CBCAMPOS: TComboBox;
    edt_pesquisa: TEdit;
    btnPesquisar: TButton;
    DS_CADASTRO: TDataSource;
    DS_CARGO: TDataSource;
    procedure btnNovoClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnEditarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure btnPesquisarClick(Sender: TObject);
  private
    procedure AtualizarDados;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmConsultaFuncionario: TFrmConsultaFuncionario;

implementation

{$R *.dfm}

procedure TFrmConsultaFuncionario.AtualizarDados;
begin
  DS_CADASTRO.DataSet.Close;
  DS_CADASTRO.DataSet.Open;
end;

procedure TFrmConsultaFuncionario.btnEditarClick(Sender: TObject);
begin
  if DS_CADASTRO.DataSet.IsEmpty then
  begin
    Application.MessageBox('Nenhum registro para editar!', 'Atenção!', MB_ICONWARNING);
    Exit;
  end;

  try
    with TFrmCadastroFuncionario.Create(Self) do
    try
      if not ds_Cadastro.DataSet.Active then
        ds_Cadastro.DataSet.Open;

      ds_Cadastro.DataSet := DS_CADASTRO.DataSet;
      ds_Cadastro.DataSet.Edit;
      ShowModal;
    finally
      Free;
    end;

    AtualizarDados;
  except
    on E: Exception do
      MessageBox(0, PChar('Erro ao editar registro: ' + E.Message), 'Erro', MB_ICONERROR);
  end;
end;

procedure TFrmConsultaFuncionario.btnExcluirClick(Sender: TObject);
begin
  if DS_CADASTRO.DataSet.IsEmpty then
  begin
    MessageBox(0, PChar('Não há registros para excluir!'), 'Aviso!', MB_ICONWARNING);
    Exit;
  end;

  if Application.MessageBox('Deseja realmente excluir o registro?', 'Atenção!', MB_ICONWARNING + MB_YESNO) = mrYes then
  try
    DS_CADASTRO.DataSet.Delete;

    AtualizarDados;
  except
    on E: Exception do
      MessageBox(0, PChar('Erro ao excluir o registro: ' + E.Message), 'Erro', MB_ICONERROR);
  end;
end;



procedure TFrmConsultaFuncionario.btnNovoClick(Sender: TObject);
begin
  try
    with TFrmCadastroFuncionario.Create(Self) do
    try
      ds_Cadastro.DataSet := DS_CADASTRO.DataSet;
      ds_Cadastro.DataSet.Insert;
      ShowModal;
    finally
      Free;
    end;

    AtualizarDados;
  except
    on E: Exception do
      MessageBox(0, PChar('Erro ao criar novo registro: ' + E.Message), 'Erro', MB_ICONERROR);
  end;
end;

{procedure TFrmConsultaFuncionario.btnPesquisarClick(Sender: TObject);
begin
  if DS_CADASTRO.State in [dsEdit, dsInsert] then
  begin
    Application.MessageBox('Não é possível realizar consultas no modo de Inserção ou Edição!', 'Atenção!', MB_ICONEXCLAMATION);
    Exit;
  end;

  try
    DS_CADASTRO.DataSet.Close;

    FrmCadastroFuncionario.Q_CADASTRO.SQL.Clear;
    FrmCadastroFuncionario.Q_CADASTRO.SQL.Add('SELECT F.NOME, F.ENDERECO, F.ADMISSAO, F.SALARIO, F.CARGO, C.CAR_NOME');
    FrmCadastroFuncionario.Q_CADASTRO.SQL.Add('FROM FUNCIONARIOS F');
    FrmCadastroFuncionario.Q_CADASTRO.SQL.Add('INNER JOIN CARGOS C ON F.CARGO = C.ID_CARGO');

    case CBCAMPOS.ItemIndex of
      0: // Nome
      begin
        FrmCadastroFuncionario.Q_CADASTRO.SQL.Add('WHERE F.NOME LIKE :PNOME');
        FrmCadastroFuncionario.Q_CADASTRO.ParamByName('PNOME').AsString := '%' + edt_pesquisa.Text + '%';
      end;

      1: // Cargo
      begin
        FrmCadastroFuncionario.Q_CADASTRO.SQL.Add('WHERE C.CAR_NOME LIKE :PCARGO');
        FrmCadastroFuncionario.Q_CADASTRO.ParamByName('PCARGO').AsString := '%' + edt_pesquisa.Text + '%';
      end;
    end;

    DS_CADASTRO.DataSet.Open;

    if DS_CADASTRO.DataSet.IsEmpty then
      Application.MessageBox('Nenhum registro encontrado!', 'Atenção!', MB_ICONEXCLAMATION);

  except
    on E: Exception do
      ShowMessage('Erro ao pesquisar: ' + E.Message);
  end;
end;  }

procedure TFrmConsultaFuncionario.btnPesquisarClick(Sender: TObject);
begin
  if DS_CADASTRO.State in [dsEdit, dsInsert] then
  begin
    Application.MessageBox('Não é possível realizar consultas no modo de Inserção ou Edição!', 'Atenção!', MB_ICONEXCLAMATION);
    Exit;
  end;

  try
    DS_CADASTRO.DataSet.Close;

    FrmCadastroFuncionario.Q_CADASTRO.SQL.Clear;
    FrmCadastroFuncionario.Q_CADASTRO.SQL.Add('SELECT F.NOME, F.ENDERECO, F.ADMISSAO, F.SALARIO, F.CARGO FROM FUNCIONARIOS F');

    case CBCAMPOS.ItemIndex of
      0: // Nome
      begin
        FrmCadastroFuncionario.Q_CADASTRO.SQL.Add('WHERE F.NOME LIKE :PNOME');
        FrmCadastroFuncionario.Q_CADASTRO.ParamByName('PNOME').AsString := '%' + edt_pesquisa.Text + '%';
      end;

      1: // Cargo
      begin
        FrmCadastroFuncionario.Q_CADASTRO.SQL.Add('WHERE F.CARGO IN (SELECT ID_CARGO FROM CARGOS WHERE CAR_NOME LIKE :PCARGO)');
        FrmCadastroFuncionario.Q_CADASTRO.ParamByName('PCARGO').AsString := '%' + edt_pesquisa.Text + '%';
      end;
    end;

    DS_CADASTRO.DataSet.Open;

    if DS_CADASTRO.DataSet.IsEmpty then
      Application.MessageBox('Nenhum registro encontrado!', 'Atenção!', MB_ICONEXCLAMATION);

  except
    on E: Exception do
      ShowMessage('Erro ao pesquisar: ' + E.Message);
  end;
end;


procedure TFrmConsultaFuncionario.FormShow(Sender: TObject);
begin
  DS_CADASTRO.DataSet.Open;
  DS_CARGO.DataSet.Open;
end;

end.

